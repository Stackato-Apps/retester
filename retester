#!/usr/bin/env perl

use Mojolicious::Lite;  # strict and warnings are implicit with Mojolicious.
use utf8;
use feature qw( unicode_strings );
use lib 'lib';
use SafeMatchStats;

app->secret('Some Session Secret'); # Unimportant: We're not using sessions.

my @match_stats = qw( debug_info    g_modifier  prematch        match
                      postmatch     carat_n     digits          array_minus
                      array_plus    hash_minus  hash_plus                   );

app->defaults( +{   # Disambiguation: Anonymous hash.
    map { $_ => undef } 'match_success', 'match_rv', @match_stats
} );    # Instantiate some defaults in the stash; makes for simpler templates.

app->defaults( nav_bar_items => [
    [ q{/}                      => 'The Perl Regex Tester'  ],
    map { [ "/pod/$_" => $_ ] } qw( perlre      perlrequick     perlretut
                                    perlreref   perlrecharclass perlrebackslash
                                    perlop      perlfaq6    perluniprops                
    ),
] );

plugin 'PoweredBy';
plugin 'PODRenderer';

any q{/} => sub {
    my $self = shift;
    return $self->render('index') if ! length $self->param('regexp');
    my $re = SafeMatchStats->new( {
            regex     => $self->param('regexp'),
            modifiers => $self->param('modifiers') || q{}
    } );
    $self->stash(
        match_success => $re->do_match( $self->param('target') )
    );
    $self->stash( match_rv => $re->match_rv ? $re->match_rv : undef );
    $self->stash( +{  map { $_ => $re->$_ } @match_stats  } );
    $self->render('index');
};

get q{/pod/:poddoc} => sub {
    my $self = shift;
    $self->render( template => 'pod' );
};

any q{/*}   => sub {
    my $self = shift;
    $self->render( 'index' );
};

app->start;

__DATA__

@@ index.html.ep
% layout 'default';
% title 'Perl Regex Tester';
<h1 class="page-header">
  <%= title =%>
</h1>
<h3>
  Test Perl regular expressions against target strings.
</h3>
<p>
  The regexp engine used is compatible with Perl <%= " $^V" =%>.
</p>
%= form_for '/' => ( method => 'post', class => 'well span5' ) => begin
  <p>
    Target string:
    <br />
    <%= text_area 'target' => 'Just another Perl hacker,',
                            cols        => 80, rows => 5,
                            class       => 'span4',
                            maxlength   => 2048,
                            title       => 'Enter a string to be targeted in the pattern match.'
    =%>
  </p>
  <p>
    Regular Expression:
    <br />
    <%= text_area 'regexp' => '\s(\w{4})\b',
                          cols        => 80, rows => 5,
                          class       => 'span4',
                          maxlength   => 2048,
                          title       => 'Enter a valid Perl regular expression.  Delimeters aren\'t necessary.'
    =%>
    <br />
      <small>
        Example: To test "<code>m/pattern/</code>", enter
        "<code>pattern</code>" (without quotes).
      </small>
  </p>
  <p>
    Modifiers:
    <br />
    <%= text_field 'modifiers', cols        => '30', 
                                placeholder => 'Valid Modifiers: [gmsixadlu]',
                                maxlength   => '10',
                                pattern     => '(?:[gmsixadlu^-][gmsixadlu-]{0,10})?',
                                title       => 'Valid modifiers are from the set [gmsixadlu^-], or none at all'
    %>
    %= submit_button 'Attempt Match', class => 'btn btn-primary'
    <br />
      <small>
        Using the <code>/g</code> modifier will run match in list context.
        <br />
        <code>/r</code> is set by default to provide access to all
        match variables.
      </small>
  </p>
  <p>
    <h1>
      &nbsp;
    </h1>
  </p>
%end

<article class="float-match float-right span5">
%== '<h2>Match!</h2>' if $match_success
%== '<h2>No match!</h2>' if defined $match_success && ! $match_success
%== '<h2>Invalid regular expression!</h2>' if param('regexp') && ! defined $match_success
<%== '<a href=' . url_for('/')->query( target => param('target'),
                                       regexp => param('regexp'),
                                       modifiers => param('modifiers') )
     . '>Link to this test</a>'
        if length param('regexp') =%>
</article>
<% if( $match_success ) {
  local $" = ',';
=%>
  <article class="float-captures float-right span6">
    <h3>Capture variables:</h3>
      <ul>
        %  if( $g_modifier ) {
          <li>List Context Return Values
            <ul>
            %  foreach my $rv ( @{$match_rv} ) {
              %== "<li>[<mark><code>$rv</code></mark>]</li>"
            %  }
            </ul>
          </li>
        %  }
        %  if( @{$digits} > 1 ) {
          <li>Digit Captures
            <ul>
            %  foreach my $digit ( 1 .. $#{$digits} ) {
              %== "<li><code>\$$digit =></code> [<mark><code>$digits->[$digit]</code></mark>]</li>"
            %  }
            </ul>
          </li>
        % }
        % if( keys %{$hash_plus} ) {
          <li>Named Captures
            <ul>
              % foreach my $name ( keys %{$hash_plus} ) {
                %== "<li>\$+{$name} => [<mark><code>$hash_plus->{$name}</code></mark>]</li>"
              % }
            </ul>
          </li>
        % }
        %== defined $prematch  && "<li><code>\${^PREMATCH} =></code> [<mark><code>$prematch</code></mark>]</li>"
        %== defined $match     && "<li><code>\${^MATCH} =></code> [<mark><code>$match</code></mark>]</li>"
        %== defined $postmatch && "<li><code>\${^POSTMATCH} =></code> [<mark><code>$postmatch</code></mark>]</li>"
        %== defined $carat_n   && "<li><code>\$^N =></code> [<mark><code>$carat_n</code></mark>]</li>"
        % foreach my $name ( keys %{$hash_minus} ) {
          %== "<li><code>\$-{$name} => (@{$hash_minus->{$name}})</code></li>"
        % }
        %== @{$array_minus} && "<li><code>\@- => </code>(<code>@{$array_minus}</code>)</li>"
        %== @{$array_plus}  && "<li><code>\@+ => </code>(<code>@{$array_plus}</code>)</li>"
    </ul>
  </article>
% }

% if( defined $debug_info ) { 
    <article class='float-left float-debug'>
      <h3>Debug Info:</h3>
      <pre><%= $debug_info =%></pre>
    </article>
% }

@@ pod.html.ep
% layout 'default';
% title 'Documentation Browser';
<h1><%= title =%></h1>
<iframe src='/perldoc/<%=$poddoc=%>', 
    seamless='seamless', width='1000', height='750'>
</iframe>



@@ layouts/default.html.ep
<!DOCTYPE html>
<html>
  <head>
    %= stylesheet '/bootstrap/css/bootstrap.min.css'
    %= stylesheet '/bootstrap/css/bootstrap-responsive.min.css'
    %= stylesheet '/css/page_style_bootstrap1.css'
    %= javascript '/bootstrap/js/bootstrap.min.js'
    <title><%= title %></title>
  </head>
  <body>
    <article class="main">
      <article>
        <div class="top-right-nav">
          <header>
            <div class="row">
              <nav>
                <div class="nav-bar-main float-right">
                  <ul id="navigation-bar">
                    % foreach my $item ( @{$nav_bar_items} ) {
                      <li class="nav-item"><a href='<%=$item->[0]=%>'>
                        <%=$item->[1]=%></a>
                      </li>
                    % }
                  </ul>
                </div>
              </nav>
            </div>
          </header>
        </div>
      </article>
      <%= content %>
    </article>
    <footer class='footer-bottom'>
      <p>
        Â©2012 - David Oswald.
      </p>
      <p>
        Powered by Perl and Mojolicious.
      </p>
    </footer>
  </body>
</html>
