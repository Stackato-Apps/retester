#!/usr/bin/env perl
use Mojolicious::Lite;

use utf8;
use lib 'lib';
use SafeMatchStats;

app->secret('Some Session Secret');

app->defaults(
    {
        map { $_, undef }
          qw( match_success   prematch    match
              postmatch       carat_n     digits
              array_minus     array_plus  hash_minus
              hash_plus       debug_info  g_modifier
              match_rv                                )
    }
);

plugin 'PoweredBy';
plugin 'PODRenderer';


any '/' => sub {
    my $self = shift;
    if ( $self->param('regexp') ) {
        my $re = SafeMatchStats->new(
            {
                regex     => $self->param('regexp')    || '',
                modifiers => $self->param('modifiers') || ''
            }
        );
        $self->stash(
            match_success => $re->do_match( $self->param('target') ) );
        $self->stash(
            debug_info    => $re->debug_info );
        $self->stash(
            g_modifier    => $re->g_modifier );
        $self->stash(
            {
                prematch    => $re->prematch,
                match       => $re->match,
                postmatch   => $re->postmatch,
                carat_n     => $re->carat_n,
                digits      => $re->digits,
                array_minus => $re->array_minus,
                array_plus  => $re->array_plus,
                hash_minus  => $re->hash_minus,
                hash_plus   => $re->hash_plus,
                match_rv    => $re->match_rv ? $re->match_rv : undef,
            }
        );
    }
    $self->render('index');
};

get '/pod/:poddoc' => sub {
    my $self = shift;
    $self->render( template => 'pod' );
};

app->start;

__DATA__

@@ index.html.ep
% layout 'default';
% title 'Perl Regex Tester';
<h1 class="page-header"><%= title =%></h1>
<h3>
    Test Perl regular expressions against target strings.
</h3>
<p>
    The regexp engine used is compatible with Perl <%= " $^V" =%>.
</p>
%= form_for '/' => ( method => 'post' ) => begin
  <p>
    Target string:
    <br />
    <%= text_area 'target', cols        => 79, rows => 5,
                            placeholder => 'Target string',
                            maxlength   => 2048,
                            title       => 'Enter a string to be targeted in the pattern match.'
    =%>
  </p>
  <p>
    Regular Expression:
    <br />
    <%=
      text_area 'regexp', cols        => 79, rows => 5,
                          placeholder => 'Regular Expression',
                          maxlength   => 2048,
                          title       => 'Enter a valid Perl regular expression.  Delimeters aren\'t necessary.'
    =%>
    <br />
      <small>
        Example: To test "<code>m/pattern/</code>", enter
        "<code>pattern</code>" (without quotes).
      </small>
  </p>
  <p>
    Modifiers:
    <br />
    <%= text_field 'modifiers', cols        => '30', 
                                placeholder => 'Valid Modifiers: [gmsixadlu]',
                                maxlength   => '10',
                                pattern     => '(?:[gmsixadlu^-][gmsixadlu-]{0,10})?',
                                title       => 'Valid modifiers are from the set, [gmsixadlu^-], or none at all'
    %>
    %= submit_button
    <br />
      <small>
        Using the <code>/g</code> modifier will run match in list context.
        <br />
        <code>/r</code> is set by default to provide access to all
        match variables.
      </small>
  </p>
%end

<article class="float-match">
%== '<h2>Match!</h2>' if $match_success
%== '<h2>No match!</h2>' if defined $match_success && ! $match_success
%== '<h2>Invalid regular expression!</h2>' if param('regexp') && ! defined $match_success
</article>
<% if( $match_success ) {
    local $" = ',';
=%>
  <article class="float-captures">
    <h3>Capture variables:</h3>
      <ul>
        %  if( $g_modifier ) {
          <li>List Context Return Values
            <ul>
            %  foreach my $rv ( @{$match_rv} ) {
              %== "<li>[<mark><code>$rv</code></mark>]</li>"
            %  }
            </ul>
          </li>
        %  }
        %  if( @{$digits} > 1 ) {
          <li>Digit Captures
            <ul>
            %  foreach my $digit ( 1 .. $#{$digits} ) {
              %== "<li><code>\$$digit =></code> [<mark><code>$digits->[$digit]</code></mark>]</li>"
            %  }
            </ul>
          </li>
        % }
        % if( keys %{$hash_plus} ) {
          <li>Named Captures
            <ul>
              % foreach my $name ( keys %{$hash_plus} ) {
                %== "<li>\$+{$name} => [<mark><code>$hash_plus->{$name}</code></mark>]</li>"
              % }
            </ul>
          </li>
        % }
        %== defined $prematch  && "<li><code>\${^PREMATCH} =></code> [<mark><code>$prematch</code></mark>]</li>"
        %== defined $match     && "<li><code>\${^MATCH} =></code> [<mark><code>$match</code></mark>]</li>"
        %== defined $postmatch && "<li><code>\${^POSTMATCH} =></code> [<mark><code>$postmatch</code></mark>]</li>"
        %== defined $carat_n   && "<li><code>\$^N =></code> [<mark><code>$carat_n</code></mark>]</li>"
        % foreach my $name ( keys %{$hash_minus} ) {
          %== "<li><code>\$-{$name} => (@{$hash_minus->{$name}})</code></li>"
        % }
        %== @{$array_minus} && "<li><code>\@- => </code>(<code>@{$array_minus}</code>)</li>"
        %== @{$array_plus}  && "<li><code>\@+ => </code>(<code>@{$array_plus}</code>)</li>"
    </ul>
  </article>
% }

% if( defined $debug_info ) { 
    <article>
      <h3>Debug Info:</h3>
      <pre><%= $debug_info =%></pre>
    </article>
% }



@@ pod.html.ep
% layout 'default';
% title 'Documentation Browser';
<h1><%= title =%></h1>
<iframe src='/perldoc/<%=$poddoc=%>', 
    seamless='seamless', width='1000', height='750'>
</iframe>



@@ layouts/default.html.ep
<!DOCTYPE html>
<html>
  <head>
    %= stylesheet '/bootstrap/css/bootstrap.css'
    %= stylesheet '/bootstrap/css/bootstrap-responsive.css'
    %= stylesheet '/css/page_style_bootstrap1.css'
    %= javascript '/bootstrap/js/bootstrap.js'
    <title><%= title %></title>
  </head>
  <body>
    <article><div class="top-right-nav">
      <header><div class="row">
        <nav> <div class="nav-bar-main float-right">
            <ul id="navigation-bar">
              <li class="nav-item"><a href='/'>The Perl Regex Tester</a></li>
              <li class="nav-item"><a href='/pod/perlre'>perlre</a></li>
              <li class="nav-item"><a href='/pod/perlrequick'>perlrequick</a></li>
              <li class="nav-item"><a href='/pod/perlretut'>perlretut</a></li>
              <li class="nav-item"><a href='/pod/perlreref'>perlreref</a></li>
              <li class="nav-item"><a href='/pod/perlrecharclass'>perlrecharclass</a></li>
              <li class="nav-item"><a href='/pod/perlop'>perlop</a></li>
              <li class="nav-item"><a href='/pod/perlfaq6'>perlfaq6</a></li>
              <li class="nav-item"><a href='/pod/perluniprops'>perluniprops</a></li>
            </ul>
        </div></nav>
      </div></header>
    </div></article>
    <%= content %>
    <footer>
      <p>
        Â©2012 - David Oswald.  Powered by Perl with a tasty serving of
        Mojolicious.
      </p>
    </footer>
  </body>
</html>
